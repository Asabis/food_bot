from dataclasses import dataclass
from typing import Dict, List

@dataclass
class NutritionRecommendations:
    protein_daily: int = 5  # –ø–æ—Ä—Ü–∏–π
    vegetables_daily: int = 5  # –ø–æ—Ä—Ü–∏–π
    fats_daily: int = 3  # –ø–æ—Ä—Ü–∏–π
    fruits_daily: int = 4  # –ø–æ—Ä—Ü–∏–π
    dairy_daily: int = 3  # –ø–æ—Ä—Ü–∏–π
    grains_daily: int = 6  # –ø–æ—Ä—Ü–∏–π

    def update_recommendations(self, new_values: Dict[str, int]):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–æ—Ä–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö."""
        for nutrient, value in new_values.items():
            if hasattr(self, f"{nutrient}_daily"):
                setattr(self, f"{nutrient}_daily", value)

class NutritionAnalyzer:
    def __init__(self, user_norms: Dict[str, int] = None):
        if user_norms:
            self.recommendations = NutritionRecommendations(**user_norms)
        else:
            self.recommendations = NutritionRecommendations()

    def analyze_daily_intake(self, totals: Dict[str, int]) -> List[str]:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–Ω–µ–≤–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∏ –≤—ã–¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"""
        recommendations = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–ª–∫–∏
        protein_percent = (totals['protein'] / self.recommendations.protein_daily) * 100 
        if protein_percent < 80:
            recommendations.append("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞. –î–æ–±–∞–≤—å—Ç–µ –≤ —Ä–∞—Ü–∏–æ–Ω –º—è—Å–æ, —Ä—ã–±—É, —è–π—Ü–∞ –∏–ª–∏ –±–æ–±–æ–≤—ã–µ.")
        elif protein_percent > 120:
            recommendations.append("‚ö†Ô∏è –ò–∑–±—ã—Ç–æ—á–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–µ–ª–∫–∞. –£–º–µ–Ω—å—à–∏—Ç–µ –ø–æ—Ä—Ü–∏–∏ –±–µ–ª–∫–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≤–æ—â–∏
        if totals['vegetables'] < self.recommendations.vegetables_daily:
            recommendations.append("ü•ó –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –æ–≤–æ—â–µ–π –¥–ª—è –ª—É—á—à–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∂–∏—Ä—ã
        fat_percent = (totals['fats'] / self.recommendations.fats_daily) * 100
        if fat_percent > 110:
            recommendations.append("‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∂–∏—Ä–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–π.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä—É–∫—Ç—ã
        if totals['fruits'] < self.recommendations.fruits_daily:
            recommendations.append("üçé –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ —Ñ—Ä—É–∫—Ç–æ–≤ –≤ —Å–≤–æ–π —Ä–∞—Ü–∏–æ–Ω.")

        # –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if not recommendations:
            recommendations.append("üëç –í–∞—à —Ä–∞—Ü–∏–æ–Ω —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!")

        return recommendations 