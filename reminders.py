from datetime import datetime, time
from typing import Dict

class MealReminder:
    def __init__(self):
        self.default_times = {
            "–ó–∞–≤—Ç—Ä–∞–∫": time(8, 0),
            "–£—Ç—Ä–µ–Ω–Ω–∏–π –ø–µ—Ä–µ–∫—É—Å": time(11, 0),
            "–û–±–µ–¥": time(14, 0),
            "–û–±–µ–¥–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–∫—É—Å": time(16, 0),
            "–ü–æ–ª–¥–Ω–∏–∫": time(17, 0),
            "–£–∂–∏–Ω": time(19, 0)
        }

    async def check_and_remind(self, context: ContextTypes.DEFAULT_TYPE):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
        now = datetime.now().time()
        
        for meal, meal_time in self.default_times.items():
            if now.hour == meal_time.hour and now.minute == meal_time.minute:
                job = context.job
                
                # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º
                message = (
                    f"‚è∞ *–í—Ä–µ–º—è –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏!*\n\n"
                    f"üçΩÔ∏è *{meal}*\n\n"
                    f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
                    f"‚Ä¢ –ù–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å –≤–æ –≤—Ä–µ–º—è –µ–¥—ã\n"
                    f"‚Ä¢ –ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã\n"
                    f"‚Ä¢ –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –µ—Å—Ç—å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—É—é –ø–∏—â—É\n\n"
                    f"üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∏–µ–º –ø–∏—â–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫: /add"
                )
                
                await context.bot.send_message(
                    job.chat_id,
                    message,
                    parse_mode='Markdown'
                ) 